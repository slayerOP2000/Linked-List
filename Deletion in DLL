#include<iostream>
using namespace std;
class Node{
    public:
    int data;
    Node* prev;
    Node* next;
    
    Node(int d)
    {
       // this->prev = NULL;
        this->data = d;
        this->prev = NULL;
        this->next = NULL;
    }
    ~Node()
    {
        int val = this->data;
        if(next!=NULL)
        {
            delete next;
            next = NULL;
        }
        cout<<"Memor free for node with data "<<val<<endl;
    }
    
};
void print(Node* head)
{
    Node* temp = head;
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;
}
//gives 
int getLength(Node* head)
{
    int len = 0;
    Node* temp = head;
    while(temp!=NULL)
    {
        len++;
    //    cout<<temp->data;
        temp = temp->next;
    }
    return len++;
    
}
void insertAthead(Node* &head,int data)
{
    Node* temp = new Node(data);
    temp->next = head;
    head->prev = temp;
    head = temp;
}
void insertAtend(Node* &tail,int data)
{
    Node* temp = new Node(data);
    tail->next = temp;
    temp->prev = tail;
    tail = temp;
}
void InsertAtPosition(Node* &tail,Node* &head,int position,int data)
{
    if(position == 1)
    {
        insertAthead(head,data);
        return;
    }
    Node* temp = head;
    int cnt = 1;
    while(cnt<position-1)
    {
        temp = temp->next;
        cnt++;
    }
    if(temp->next == NULL)
    {
        insertAtend(tail,data);
        return;
    }
    Node* nodetoinsert = new Node(data);
    nodetoinsert->next = temp->next;
    temp->next->prev = nodetoinsert;
    temp->next = nodetoinsert;
    nodetoinsert->prev = temp;
}
void deleteNode(int position,Node* &head)
{
    if(position == 1)
    {
        Node* temp = head;
        temp->next->prev = NULL;
        head = temp->next;
        temp->next = NULL;
        delete temp;
    }
    else
    {
        Node* curr =head;
        Node* prev =NULL;
        int cnt = 1;
        while(cnt<position)
        {
            prev = curr;
            curr = curr->next;
            cnt++;
        }
        curr->prev =NULL;
        prev->next = curr->next;
        curr->next = NULL;
        delete curr;
    }
}
int main()
{
    Node* node1 = new Node(10);
    Node* head = node1;
    Node* tail = node1;
    print(head);
    cout<<getLength(head)<<endl;
    insertAthead(head,11);
    print(head);
    insertAthead(head,12);
    print(head);
    insertAtend(tail,9);
    print(head);
    insertAtend(tail,8);
    print(head);
    InsertAtPosition(tail,head,2,13);
    print(head);
    deleteNode(3,head);
    print(head);
    
    return 0;
}
